#!/usr/bin/env node
'use strict';Object.defineProperty(exports,'__esModule',{value:!0});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,'value'in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();var _momentTimezone=require('moment-timezone'),_momentTimezone2=_interopRequireDefault(_momentTimezone),_utils=require('./utils');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError('Cannot call a class as a function')}var TimezoneCompare=function(){function TimezoneCompare(a,b){_classCallCheck(this,TimezoneCompare);var c=(0,_utils.getValidZoneName)(a),d=(0,_utils.getValidZoneName)(b);this.from_timezone=c,this.to_timezone=d}return _createClass(TimezoneCompare,[{key:'getTimes',value:function getTimes(){var a=this.from_timezone,b=this.to_timezone,c=[],d=_momentTimezone2.default.tz(a).startOf('day'),e=d.clone().add(30,'hours');for(d.add(-30,'minutes'),c.push([a,b]);d.isBefore(e);){var f=d.add(30,'minutes').clone(),g=f.clone().tz(b);c.push([f.format(_utils.FORMAT)+' '+a,g.format(_utils.FORMAT)+' '+b])}return c}}]),TimezoneCompare}();exports.default=TimezoneCompare;module.exports=exports['default'];